{"version":3,"file":"modal_add_new_declaration.min.js","sources":["../src/modal_add_new_declaration.js"],"sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry', 'core/modal_events'],\n    function ($, Notification, CustomEvents, Modal, ModalRegistry, ModalEvents) {\n\n        var registered = false;\n        var SELECTORS = {\n            ADD_BUTTON: '[data-action=\"add\"]',\n            CANCEL_BUTTON: '[data-action=\"cancel\"]',\n        };\n\n        /**\n         * Constructor for the Modal.\n         *\n         * @param {object} root The root jQuery element for the modal\n         */\n        var ModalAddDeclaration = function (root) {\n            Modal.call(this, root);\n\n            if (!this.getFooter().find(SELECTORS.ADD_BUTTON).length) {\n                Notification.exception({\n                    message: 'No add button found'\n                });\n            }\n\n            if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\n                Notification.exception({\n                    message: 'No cancel button found'\n                });\n            }\n        };\n\n        ModalAddDeclaration.TYPE = 'assignsubmission_declaration-adddeclaration';\n        ModalAddDeclaration.prototype = Object.create(Modal.prototype);\n        ModalAddDeclaration.prototype.constructor = ModalAddDeclaration;\n\n        /**\n         * Set up all of the event handling for the modal.\n         *\n         * @method registerEventListeners\n         */\n        ModalAddDeclaration.prototype.registerEventListeners = function () {\n            // Apply parent event listeners.\n            Modal.prototype.registerEventListeners.call(this);\n\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.ADD_BUTTON, function (e, data) {\n                // Add your logic for when the login button is clicked.\n\n                let match = Array.from(document.querySelectorAll('[id^=id_assignsubmission_declaration_]')); // Get the ids that start with this string\n                const currentIds = match.filter(id => { // The format of the ids is id_assignsubmission_declaration_1. This returns an array of elements\n                    if (id.getAttribute('id').match(/(\\d+)\\D*$/)) return id;\n                });\n\n                let lastNumber = (currentIds[currentIds.length - 2]).getAttribute('id'); // We get the textarea and checkbox id, the textarea is easier to work with.\n                lastNumber = lastNumber.split('_');\n                lastNumber = lastNumber.filter(val => {\n                    if (!isNaN(val)) return val;\n                });\n                const newID = (JSON.parse(document.getElementById('id_declarationjson').value).length + 1); //parseInt(lastNumber[lastNumber.length - 1]) + 1;\n\n                const newDec = {\n                    declaration_title: document.getElementById('inputTitle').value,\n                    declaration_text: document.getElementById('inputContent').value,\n                    id: newID,\n                    assignment: document.getElementById('id_declarationjson').getAttribute('assignmentid'),\n                    selected: 0\n                };\n\n                document.getElementById('inputTitle').classList.remove('input-error');\n                document.getElementById('inputContent').classList.remove('input-error');\n\n                if (newDec.declaration_title == '') {\n                    document.getElementById('inputTitle').classList.add('input-error');\n                    return;\n                }\n\n                if (newDec.declaration_text == '') {\n                    document.getElementById('inputContent').classList.add('input-error');\n                    return;\n                }\n\n                const declaration = document.getElementById('fgroup_id_assignsubmission_declaration_group_1'); // Its the first oneof all.\n                const declarationSubmissionContainer = document.getElementById('id_submissiontypescontainer');\n                const btnContainer = document.querySelector('.add-new-declaration-container');\n\n                let newDeclaration = declaration.cloneNode(true);\n                newDeclaration.setAttribute('id', `fgroup_id_assignsubmission_declaration_group_${newDec.id}`);\n\n                Array.from(newDeclaration.children).forEach((child, index) => {\n\n                    if (index == 0) {\n                        // Title section\n                        const newid = `fgroup_id_assignsubmission_declaration_group_label_${(JSON.parse(document.getElementById('id_declarationjson').value).length + 1)}`; //_${newDec.declaration_title}\n                        child.children[index].setAttribute('id', newid);\n                        newDec.old_title = child.children[index].innerHTML.replace(/^\\s+|\\s+$/g, '');\n                        child.children[index].setAttribute('data-current-title', newDec.declaration_title);\n                        child.children[index].innerHTML = newDec.declaration_title;\n\n                        child.setAttribute('contenteditable', true);\n                        child.addEventListener('input', function (e) {\n                            //title div -> textarea div\n                            let id = document.getElementById(e.target.id).nextElementSibling.children[0].children[1].children[1].getAttribute('id'); // Get the element that has the textarea nested and that it has the id we need.\n                            id = id[id.length - 1];\n\n                            const data = JSON.parse(document.getElementById('id_declarationjson').value);\n                            const updateData = {\n                                id: id,\n                                declaration_title: document.getElementById(e.target.id).children[0].innerHTML.replace(/^\\s+|\\s+$/g, '')\n                            };\n                            data.forEach((d) => {\n                                if (d.id == updateData.id) {\n                                    d.declaration_title = updateData.declaration_title;\n                                }\n                            }, updateData);\n                            document.getElementById('id_declarationjson').value = JSON.stringify(data);\n                        });\n                    } else {\n\n                        Array.from(child.children).forEach((child, index) => {\n                            if (index == 0) {\n\n                                Array.from(child.children).forEach((child, index) => {\n                                    if (index == 0) {\n                                        child.innerHTML = newDec.declaration_title; //Legend\n                                    } else {\n\n                                        Array.from(child.children).forEach((child, index) => {\n                                            if (index == 0) {\n                                                child.setAttribute('for', `id_assignsubmission_declaration_${newDec.id}`);\n                                            } else if (index == 1) { // Textarea.\n                                                child.innerHTML = newDec.declaration_text;\n\n                                                child.removeAttribute('placeholder');\n                                                child.setAttribute('value', newDec.declaration_text);\n                                                child.setAttribute('id', `id_assignsubmission_declaration_${newDec.id}`)\n                                                child.setAttribute('name', `assignsubmission_declaration_${newDec.id}`)\n\n                                            } else if (index == 2) { // Checkbox.\n\n                                                Array.from(child.children).forEach((child, index) => {\n                                                    child.value = 0;\n                                                    child.removeAttribute('checked');\n                                                    child.setAttribute('id', `id_assignsubmission_declaration_${newDec.id}_check`);\n                                                    child.setAttribute('name', `assignsubmission_declaration_${newDec.id}_check`);\n                                                    child.addEventListener('change', function (e) {\n                                                        if (e.target.checked) {\n                                                            let declaration = JSON.parse(document.getElementById('id_declarationjson').value);\n                                                            declaration.forEach(decl => {\n                                                                if (decl.id == newDec.id) {\n                                                                    decl.selected = 1;\n                                                                }\n                                                            }, newDeclaration);\n\n                                                            document.getElementById('id_declarationjson').value = JSON.stringify(declaration);\n                                                        }\n                                                    })\n                                                })\n\n                                            } else if (index == 3) { // Delete section.\n                                                child.setAttribute('data-delete-icon', 1);\n                                                child.removeAttribute('hidden');\n\n                                                Array.from(child.children).forEach((child, index) => {\n                                                    child.setAttribute('id', `delete_declaration_container_${newDec.id}`);\n                                                    Array.from(child.children).forEach((child, index) => {\n                                                        child.setAttribute('id', `delete_declaration_${newDec.id}`); // x icon\n                                                    })\n\n                                                });\n\n                                                // This descriptor is not saved in the DB, so its safe to just remove it from the JSON.\n                                                child.addEventListener('click', function (e) {\n                                                    let id = e.target.id.split('_');\n                                                    id = id[id.length - 1];\n                                                    let data = JSON.parse(document.getElementById('id_declarationjson').value);\n                                                    data = data.filter((d) => {\n                                                        if (d.id != id) {\n                                                            return d;\n                                                        }\n                                                    }, id);\n                                                    document.getElementById('id_declarationjson').value = JSON.stringify(data);\n                                                    // remove element from view.\n                                                    document.getElementById(`fgroup_id_assignsubmission_declaration_group_${id}`).remove();\n\n                                                });\n                                                const spanText = child.innerHTML;\n                                                child.innerHTML = spanText.replace(newDec.old_title, newDec.declaration_title);\n\n\n                                            } else {\n                                                child.setAttribute('id', `id_assignsubmission_declaration_${newDec.id}_check`);\n\n                                            }\n                                        })\n                                    }\n                                });\n\n                            }\n\n                        });\n                    }\n                    this.destroy(); // Remove the modal.\n                }, newDec);\n\n                // Add the descriptor to the json\n                let decl = JSON.parse(document.getElementById('id_declarationjson').value);\n                decl.push(newDec);\n                document.getElementById('id_declarationjson').value = JSON.stringify(decl);\n                declarationSubmissionContainer.insertBefore(newDeclaration, btnContainer)\n\n\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function (e, data) {\n                // Add your logic for when the cancel button is clicked.\n                this.destroy();\n\n            }.bind(this));\n        };\n\n        // Automatically register with the modal registry the first time this module is imported so that you can create modals\n        // of this type using the modal factory.\n        if (!registered) {\n            ModalRegistry.register(ModalAddDeclaration.TYPE, ModalAddDeclaration, 'assignsubmission_declaration/assignsubmission_declaration_modal');\n            registered = true;\n        }\n\n        return ModalAddDeclaration;\n    });"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","ModalEvents","registered","SELECTORS","ModalAddDeclaration","root","call","this","getFooter","find","length","exception","message","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","e","data","currentIds","Array","from","document","querySelectorAll","filter","id","getAttribute","match","lastNumber","split","val","isNaN","newID","JSON","parse","getElementById","value","newDec","declaration_title","declaration_text","assignment","selected","classList","remove","declaration","declarationSubmissionContainer","btnContainer","querySelector","newDeclaration","cloneNode","setAttribute","children","forEach","child","index","newid","old_title","innerHTML","replace","addEventListener","target","nextElementSibling","updateData","d","stringify","removeAttribute","checked","decl","spanText","_this","destroy","push","insertBefore","add","bind","register"],"mappings":"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"}