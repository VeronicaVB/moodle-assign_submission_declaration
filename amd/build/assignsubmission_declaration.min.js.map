{"version":3,"file":"assignsubmission_declaration.min.js","sources":["../src/assignsubmission_declaration.js"],"sourcesContent":["import ModalAddDeclaration from 'assignsubmission_declaration/modal_add_new_declaration';\nimport ModalFactory from 'core/modal_factory';\n\nconst addDeclarationHandler = function (e) {\n    var trigger = $('#add-new-declaration-btn');\n    ModalFactory.create({\n        type: ModalAddDeclaration.TYPE\n    }, trigger);\n\n}\n\nconst selectSubmissionHandler = function (e) {\n    if (e.target.checked) {\n        // Show elements related to declaration submission\n        showSubmissionDeclarationElements();\n    } else {\n        // Hide elements related to declaration submission\n        hideSubmissionDeclarationElements();\n\n    }\n}\n\nconst hideSubmissionDeclarationElements = function () {\n    let match = Array.from(document.querySelectorAll('[id^=id_assignsubmission_declaration_]'));\n    document.getElementById('add-new-declaration-btn').style.display = 'none';\n    match.forEach(el => {\n        if (el.getAttribute('id') != 'id_assignsubmission_declaration_enabled') {\n            el.style.display = 'none';\n        }\n    });\n}\n\nconst showSubmissionDeclarationElements = function () {\n    document.getElementById('add-new-declaration-btn').style.display = 'inline-block';\n    let match = Array.from(document.querySelectorAll('[id^=id_assignsubmission_declaration_]'));\n    match.forEach(el => {\n        if (el.getAttribute('id') != 'id_assignsubmission_declaration_enabled') {\n            el.style.display = '';\n        }\n    });\n}\n\nconst changeTextareaHandler = (e) => {\n    // Empty textarea\n    if (document.getElementById(e.target.id).value == '') {\n        document.getElementById(e.target.id).classList.add('empty-value-error');\n        document.getElementById(e.target.id).value = \"Declaration description cannot be empty\";\n    } else {\n        document.getElementById(e.target.id).classList.remove('empty-value-error');\n    }\n    let id = (e.target.id).split('_');\n    id = id[id.length - 1];\n    const data = JSON.parse(document.getElementById('id_declarationjson').value);\n    const updateData = {\n        id: id,\n        declaration_text: document.getElementById(e.target.id).value\n    };\n\n    data.forEach((d) => {\n        if (d.id == updateData.id && updateData.declaration_text != \"Declaration description cannot be empty\") {\n            d.declaration_text = updateData.declaration_text;\n        }\n    }, updateData);\n\n    document.getElementById('id_declarationjson').value = JSON.stringify(data);\n\n}\n\nconst makeTitleEditable = () => {\n\n    Array.from(document.querySelectorAll('#fgroup_id_assignsubmission_declaration_group')).forEach((child, index) => {\n        let count = index + 1;\n        child.setAttribute('id', `fgroup_id_assignsubmission_declaration_group_${count}`);\n        Array.from(child.children).forEach((child1, index) => {\n            Array.from(child1.children).forEach((child, index) => {\n                if (index == 0 && child.nodeName == 'P') {\n                    child.setAttribute('contenteditable', true);\n                    child.addEventListener('input', changeTitleHandler);\n                };\n            }, child1);\n        });\n\n    });\n\n}\n\nconst changeTitleHandler = (e) => {\n    //title div -> textarea div\n\n    if (document.getElementById(e.target.id).innerHTML == '') {\n        document.getElementById(e.target.id).innerHTML = \"Title cannot be empty\";\n        document.getElementById(e.target.id).style.border = \"2px solid red\";\n    } else {\n        document.getElementById(e.target.id).style.border = \"\";\n    }\n\n    let id = e.target.id.split('_'); // Get the element that has the textarea nested and that it has the id we need.\n    id = id[id.length - 1];\n    const data = JSON.parse(document.getElementById('id_declarationjson').value);\n    const updateData = {\n        id: id,\n        declaration_title: document.getElementById(e.target.id).innerHTML.replace(/^\\s+|\\s+$/g, '')\n    };\n\n    data.forEach((d) => {\n        if (d.id == updateData.id && updateData.declaration_title != 'Title cannot be empty') {\n            d.declaration_title = updateData.declaration_title;\n        }\n    }, updateData);\n\n    document.getElementById('id_declarationjson').value = JSON.stringify(data);\n}\n\nconst debounce = (callback, wait) => {\n    let timeout;\n    return (...args) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            callback.apply(this, args);\n        }, wait);\n    };\n}\nconst selectHandler = (e) => {\n    let id = e.target.id.split('_');\n    id = id[id.length - 2];\n    let data = JSON.parse(document.getElementById('id_declarationjson').value);\n    let updateData = {\n        id: id,\n        selected: e.target.checked ? 1 : 0\n    }\n    data.forEach((d) => {\n\n        if (d.id == updateData.id) {\n            d.selected = updateData.selected;\n        }\n    }, updateData);\n\n    document.getElementById('id_declarationjson').value = JSON.stringify(data);\n}\nconst deleteDeclarationHandler = (e) => {\n\n    let id = (e.target.id).split('_');\n    id = id[id.length - 1];\n    let data = JSON.parse(document.getElementById('id_declarationjson').value);\n    let updateData = {\n        id: id,\n        deleted: 1,\n        indextodelete: -1\n    }\n    if (data.length > 1) {\n        data.forEach((d, index) => {\n            if (d.id == updateData.id) {\n                if (d.sqlid != null) {\n                    d.deleted = updateData.deleted;\n                } else {\n                    updateData.indextodelete = index;\n                }\n            }\n        }, updateData);\n        if (updateData.indextodelete > -1) {\n            data.splice(updateData.indextodelete, 1);\n        }\n\n        document.getElementById('id_declarationjson').value = JSON.stringify(data);\n        // remove element from view.\n        document.getElementById(`fgroup_id_assignsubmission_declaration_group_${updateData.id}`).remove();\n    } else {\n        console.log(\"Just one, cant delete\");\n    }\n}\nconst refreshDeleteSectionTitle = () => {\n    // This function will wait until the user finishes typing the newn title. after, it will refresh the delete title section.\n    window.addEventListener('keyup', debounce(() => {\n        // code you would like to run 1000ms after the keyup event has stopped firing\n        // further keyup events reset the timer, as expected\n        let data = JSON.parse(document.getElementById('id_declarationjson').value);\n        Array.from(document.querySelectorAll('p[id^=fgroup_id_assignsubmission_declaration_group_label_]')).forEach((p, index) => {\n            let id = p.getAttribute('id').split('_');\n            id = id[id.length - 1];\n            data.forEach((d) => {\n                if (d.id == id) {\n                    const deletesectiontitle = document.getElementById(`delete_declaration_container_${id}`).innerHTML;\n                    const currentTitle = document.getElementById(`delete_declaration_container_${id}`).innerHTML.split('</i>')[1];\n                    document.getElementById(`delete_declaration_container_${id}`).innerHTML = deletesectiontitle.replace(currentTitle, `Delete ${d.declaration_title} declaration`);\n                    document.getElementById(`fgroup_id_assignsubmission_declaration_group_label_${id}`).setAttribute('data-current-title', d.declaration_title);\n                }\n            }, id);\n\n        }, data)\n\n    }, 1000))\n}\n\nexport const init = () => {\n    if (!document.getElementById('id_assignsubmission_declaration_enabled').checked) {\n        document.getElementById('add-new-declaration-btn').style.display = 'none';\n    } else {\n        document.getElementById('add-new-declaration-btn').style.display = 'inline-block';\n    }\n\n    document.getElementById('id_assignsubmission_declaration_enabled').addEventListener('change', selectSubmissionHandler);\n    document.querySelector('.add-new-declaration').addEventListener('click', addDeclarationHandler);\n    //Only allow changes when there are no submitted work.\n    if (document.getElementById('id_submittedwork').value == 0) {\n        // Textarea add event.\n        document.querySelectorAll('textarea[id^=id_assignsubmission_declaration_]').forEach((textarea) => {\n            textarea.addEventListener('change', changeTextareaHandler);\n        });\n        // Checkbox add event.\n        document.querySelectorAll('input[id^=id_assignsubmission_declaration_]').forEach((checkbox) => {\n\n            let id = checkbox.getAttribute('id').split('_');\n            if (id[id.length - 1] == 'check') {\n                checkbox.addEventListener('change', selectHandler);\n            }\n\n        });\n\n        // Delete event listeners\n        document.querySelectorAll('i[id^=delete_declaration_]').forEach((deleteicon) => {\n            deleteicon.addEventListener('click', deleteDeclarationHandler);\n        });\n\n\n        makeTitleEditable();\n        refreshDeleteSectionTitle();\n\n    } else {\n        // Disable textarea,\n        document.querySelectorAll('textarea[id^=id_assignsubmission_declaration_]').forEach((textarea) => {\n            textarea.setAttribute('disabled', true);\n        });\n        // Disable checkbox\n        document.querySelectorAll('input[id^=id_assignsubmission_declaration_]').forEach((checkbox) => {\n\n            let id = checkbox.getAttribute('id').split('_');\n            if (id[id.length - 1] == 'check') {\n                checkbox.setAttribute('disabled', true);\n            }\n        });\n\n        document.querySelector('.add-new-declaration-container').style.display = 'none';\n        Array.from(document.querySelectorAll('[data-delete-icon]')).forEach(delEl => {\n            delEl.style.display = 'none';\n        });\n        // Show message\n        document.querySelector('.it-has-submissions').removeAttribute('hidden');\n    }\n\n\n};"],"names":["addDeclarationHandler","e","trigger","$","create","type","ModalAddDeclaration","TYPE","selectSubmissionHandler","target","checked","showSubmissionDeclarationElements","hideSubmissionDeclarationElements","match","Array","from","document","querySelectorAll","getElementById","style","display","forEach","el","getAttribute","changeTextareaHandler","id","value","classList","add","remove","split","length","data","JSON","parse","updateData","declaration_text","d","stringify","changeTitleHandler","innerHTML","border","declaration_title","replace","selectHandler","selected","deleteDeclarationHandler","deleted","indextodelete","index","sqlid","splice","console","log","refreshDeleteSectionTitle","callback","wait","timeout","window","addEventListener","p","deletesectiontitle","currentTitle","setAttribute","args","clearTimeout","setTimeout","apply","this","querySelector","textarea","checkbox","deleteicon","child","count","children","child1","nodeName","delEl","removeAttribute"],"mappings":"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"}