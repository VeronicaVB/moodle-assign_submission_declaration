{"version":3,"file":"assignsubmission_declaration.min.js","sources":["../src/assignsubmission_declaration.js"],"sourcesContent":["import ModalAddDeclaration from 'assignsubmission_declaration/modal_add_new_declaration';\nimport ModalFactory from 'core/modal_factory';\n\nconst addDeclarationHandler = function (e) {\n    console.log(e);\n    var trigger = $('#add-new-declaration-btn');\n    ModalFactory.create({type: ModalAddDeclaration.TYPE}, trigger);\n\n}\n\nconst selectSubmissionHandler = function (e) {\n    if (e.target.checked) {\n           // Show elements related to declaration submission\n        showSubmissionDeclarationElements();\n    } else {\n        // Hide elements related to declaration submission\n        hideSubmissionDeclarationElements();\n\n    }\n}\n\nconst hideSubmissionDeclarationElements = function () {\n    let match = Array.from(document.querySelectorAll('[id^=id_assignsubmission_declaration_]'));\n    document.getElementById('add-new-declaration-btn').style.display = 'none';\n    match.forEach(el => {\n        if (el.getAttribute('id') != 'id_assignsubmission_declaration_enabled') {\n            el.style.display = 'none';\n        }\n    });\n}\n\nconst showSubmissionDeclarationElements = function () {\n    document.getElementById('add-new-declaration-btn').style.display = 'inline-block';\n    let match = Array.from(document.querySelectorAll('[id^=id_assignsubmission_declaration_]'));\n    match.forEach(el => {\n        if (el.getAttribute('id') != 'id_assignsubmission_declaration_enabled') {\n            el.style.display = '';\n        }\n    });\n}\n\n\nexport const init = () => {\n    if (!document.getElementById('id_assignsubmission_declaration_enabled').checked) {\n        document.getElementById('add-new-declaration-btn').style.display = 'none';\n    } else {\n        document.getElementById('add-new-declaration-btn').style.display = 'inline-block';\n    }\n\n    document.getElementById('id_assignsubmission_declaration_enabled').addEventListener('change', selectSubmissionHandler);\n    document.querySelector('.add-new-declaration').addEventListener('click', addDeclarationHandler);\n};"],"names":["addDeclarationHandler","e","console","log","trigger","$","create","type","ModalAddDeclaration","TYPE","selectSubmissionHandler","target","checked","showSubmissionDeclarationElements","hideSubmissionDeclarationElements","match","Array","from","document","querySelectorAll","getElementById","style","display","forEach","el","getAttribute","addEventListener","querySelector"],"mappings":"kgBAGMA,sBAAwB,SAAUC,GACpCC,QAAQC,IAAIF,OACRG,QAAUC,EAAE,mDACHC,OAAO,CAACC,KAAMC,mCAAoBC,MAAOL,UAIpDM,wBAA0B,SAAUT,GAClCA,EAAEU,OAAOC,QAETC,oCAGAC,qCAKFA,kCAAoC,eAClCC,MAAQC,MAAMC,KAAKC,SAASC,iBAAiB,2CACjDD,SAASE,eAAe,2BAA2BC,MAAMC,QAAU,OACnEP,MAAMQ,SAAQ,SAAAC,IACmB,2CAAzBA,GAAGC,aAAa,QAChBD,GAAGH,MAAMC,QAAU,YAKzBT,kCAAoC,WACtCK,SAASE,eAAe,2BAA2BC,MAAMC,QAAU,eACvDN,MAAMC,KAAKC,SAASC,iBAAiB,2CAC3CI,SAAQ,SAAAC,IACmB,2CAAzBA,GAAGC,aAAa,QAChBD,GAAGH,MAAMC,QAAU,sBAMX,WACXJ,SAASE,eAAe,2CAA2CR,QAGpEM,SAASE,eAAe,2BAA2BC,MAAMC,QAAU,eAFnEJ,SAASE,eAAe,2BAA2BC,MAAMC,QAAU,OAKvEJ,SAASE,eAAe,2CAA2CM,iBAAiB,SAAUhB,yBAC9FQ,SAASS,cAAc,wBAAwBD,iBAAiB,QAAS1B"}